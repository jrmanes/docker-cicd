name: Docker Build & Publish

on:
  push:
    branches:
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+"
      - "v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+"

  pull_request:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      version:
        # Friendly description to be shown in the UI instead of 'name'
        description: "Semver type of new version (major / minor / patch)"
        # Input has to be provided for the workflow to run
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  MAINTAINER: CelestiaOrg

jobs:
  docker-build:
    runs-on: "ubuntu-latest"
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: "actions/checkout@v3"

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels:
            maintainer=${{ env.MAINTAINER }}
            commit_url=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.source'] }}
            #${{ org.opencontainers.image.source }}/commit/${{Â org.opencontainers.image.revision }}
          tags: |
            # Update the latest image when branch is main or with tags
            latest
            # output minimal (short sha)
            type=raw,value={{sha}}
            # output 0.2.1
            type=semver,pattern={{version}}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          #file: Dockerfile
